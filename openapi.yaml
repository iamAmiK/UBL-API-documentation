openapi: 3.0.0
info:
  title: M13A_Guard UBL Invoice Generation and Validation
  description: >-
    **2 new V3 routes added! In total 17 features!!!**


    **Features include invoice generation, validation, order validation, PDF generation, invoice translation, CRUD operations, batch operations and email functionality.**


    Link:
    [https://github.com/iamAmiK/UBL-API-documentation?tab=readme-ov-file](https://github.com/iamAmiK/UBL-API-documentation?tab=readme-ov-file)


    If you want more information or **want to use our AWS deployment**, contact me (Amitabh K)
    @[z5480896@ad.unsw.edu.au](https://mailto:z5480896@ad.unsw.edu.au)
  version: 3.0.0
servers:
  - url: https://iamamik710-bvpzkbif.leapcell.dev
paths:
  /:
    get:
      tags:
        - Default Routes
      summary: Fetch API
      description: Check if API exists
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/healthcheck:
    get:
      tags:
        - Default Routes
      summary: Health Check for API and database
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/keys/generate:
    post:
      tags:
        - API Key Routes
      summary: Generate API Key
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                companyName: Amitabh
                contactEmail: putYourOwnEmail@gmail.com
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/keys/details:
    get:
      tags:
        - API Key Routes
      summary: Add user under Admin API email
      parameters:
        - name: x-api-key
          in: header
          schema:
            type: string
          description: make sure api key never changes
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          schema:
            type: string
          description: put any email here and it gets added as user under admin email
          example: newEmailForNewUser@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/invoices/generate:
    post:
      tags:
        - Invoice Routes
      summary: Create new Invoice
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Order
                xmlns=\"urn:oasis:names:specification:ubl:schema:xsd:Order-2\"\r\n      
                xmlns:cac=\"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\"\r\n      
                xmlns:cbc=\"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\">\r\n   
                <cbc:ID>PO-12345</cbc:ID>\r\n   
                <cbc:IssueDate>2023-12-01</cbc:IssueDate>\r\n   
                <cbc:OrderTypeCode>220</cbc:OrderTypeCode>\r\n   
                <cbc:DocumentCurrencyCode>USD</cbc:DocumentCurrencyCode>\r\n   
                <cac:BuyerCustomerParty>\r\n        <cac:Party>\r\n           
                <cac:PartyName>\r\n                <cbc:Name>Acme
                Corporation</cbc:Name>\r\n           
                </cac:PartyName>\r\n           
                <cac:PartyTaxScheme>\r\n               
                <cbc:CompanyID>US123456789</cbc:CompanyID>\r\n               
                <cac:TaxScheme>\r\n                   
                <cbc:ID>VAT</cbc:ID>\r\n               
                </cac:TaxScheme>\r\n            </cac:PartyTaxScheme>\r\n       
                </cac:Party>\r\n    </cac:BuyerCustomerParty>\r\n   
                <cac:SellerSupplierParty>\r\n        <cac:Party>\r\n           
                <cac:PartyName>\r\n                <cbc:Name>Supplier
                Inc.</cbc:Name>\r\n            </cac:PartyName>\r\n           
                <cac:PartyTaxScheme>\r\n               
                <cbc:CompanyID>US987654321</cbc:CompanyID>\r\n               
                <cac:TaxScheme>\r\n                   
                <cbc:ID>VAT</cbc:ID>\r\n               
                </cac:TaxScheme>\r\n            </cac:PartyTaxScheme>\r\n       
                </cac:Party>\r\n    </cac:SellerSupplierParty>\r\n   
                <cac:OrderLine>\r\n        <cbc:ID>1</cbc:ID>\r\n       
                <cac:LineItem>\r\n            <cbc:ID>1</cbc:ID>\r\n           
                <cbc:Quantity unitCode=\"EA\">10</cbc:Quantity>\r\n           
                <cbc:LineExtensionAmount
                currencyID=\"USD\">1000.00</cbc:LineExtensionAmount>\r\n           
                <cac:Item>\r\n                <cbc:Description>Laptop Computer
                Model</cbc:Description>\r\n                <cbc:Name>Laptop
                Model X</cbc:Name>\r\n            </cac:Item>\r\n           
                <cac:Price>\r\n                <cbc:PriceAmount
                currencyID=\"USD\">100.00</cbc:PriceAmount>\r\n           
                </cac:Price>\r\n            <cac:TaxTotal>\r\n               
                <cbc:TaxAmount
                currencyID=\"USD\">100.00</cbc:TaxAmount>\r\n               
                <cac:TaxSubtotal>\r\n                    <cbc:TaxableAmount
                currencyID=\"USD\">1000.00</cbc:TaxableAmount>\r\n                   
                <cbc:TaxAmount
                currencyID=\"USD\">100.00</cbc:TaxAmount>\r\n                   
                <cac:TaxCategory>\r\n                       
                <cbc:ID>S</cbc:ID>\r\n                       
                <cbc:Percent>10</cbc:Percent>\r\n                       
                <cac:TaxScheme>\r\n                           
                <cbc:ID>VAT</cbc:ID>\r\n                       
                </cac:TaxScheme>\r\n                   
                </cac:TaxCategory>\r\n               
                </cac:TaxSubtotal>\r\n            </cac:TaxTotal>\r\n       
                </cac:LineItem>\r\n    </cac:OrderLine>\r\n   
                <cac:OrderLine>\r\n        <cbc:ID>2</cbc:ID>\r\n       
                <cac:LineItem>\r\n            <cbc:ID>2</cbc:ID>\r\n           
                <cbc:Quantity unitCode=\"EA\">5</cbc:Quantity>\r\n           
                <cbc:LineExtensionAmount
                currencyID=\"USD\">500.00</cbc:LineExtensionAmount>\r\n           
                <cac:Item>\r\n                <cbc:Description>External
                Monitor</cbc:Description>\r\n                <cbc:Name>Monitor
                24-inch</cbc:Name>\r\n            </cac:Item>\r\n           
                <cac:Price>\r\n                <cbc:PriceAmount
                currencyID=\"USD\">100.00</cbc:PriceAmount>\r\n           
                </cac:Price>\r\n            <cac:TaxTotal>\r\n               
                <cbc:TaxAmount
                currencyID=\"USD\">50.00</cbc:TaxAmount>\r\n               
                <cac:TaxSubtotal>\r\n                    <cbc:TaxableAmount
                currencyID=\"USD\">500.00</cbc:TaxableAmount>\r\n                   
                <cbc:TaxAmount
                currencyID=\"USD\">50.00</cbc:TaxAmount>\r\n                   
                <cac:TaxCategory>\r\n                       
                <cbc:ID>S</cbc:ID>\r\n                       
                <cbc:Percent>10</cbc:Percent>\r\n                       
                <cac:TaxScheme>\r\n                           
                <cbc:ID>VAT</cbc:ID>\r\n                       
                </cac:TaxScheme>\r\n                   
                </cac:TaxCategory>\r\n               
                </cac:TaxSubtotal>\r\n            </cac:TaxTotal>\r\n       
                </cac:LineItem>\r\n    </cac:OrderLine>\r\n</Order> "
      parameters:
        - name: X-User-Email
          in: header
          schema:
            type: string
          example: newEmailTest@gmail.com
        - name: x-api-key
          in: header
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/xml
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/invoices/validate:
    post:
      tags:
        - Invoice Routes
      summary: Test Invoice Validation
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Invoice
                xmlns=\"urn:oasis:names:specification:ubl:schema:xsd:Invoice-2\"\r\n        
                xmlns:cac=\"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\"\r\n        
                xmlns:cbc=\"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\">\r\n   
                <!-- Missing required UBLVersionID -->\r\n   
                <cbc:ID>INV-12345</cbc:ID>\r\n   
                <cbc:IssueDate>2023-12-01</cbc:IssueDate>\r\n    <!-- Missing
                DueDate -->\r\n    <!-- Missing InvoiceTypeCode -->\r\n   
                <cbc:DocumentCurrencyCode>USD</cbc:DocumentCurrencyCode>\r\n   
                <!-- Missing OrderReference -->\r\n    <!-- Missing
                AccountingSupplierParty -->\r\n   
                <cac:AccountingCustomerParty>\r\n       
                <cac:Party>\r\n            <cac:PartyName>\r\n               
                <cbc:Name>Acme Corporation</cbc:Name>\r\n           
                </cac:PartyName>\r\n            <!-- Missing PartyTaxScheme
                -->\r\n        </cac:Party>\r\n   
                </cac:AccountingCustomerParty>\r\n    <!-- Missing TaxTotal
                -->\r\n    <cac:LegalMonetaryTotal>\r\n        <!-- Missing
                LineExtensionAmount -->\r\n        <cbc:TaxExclusiveAmount
                currencyID=\"USD\">1500.00</cbc:TaxExclusiveAmount>\r\n       
                <cbc:TaxInclusiveAmount
                currencyID=\"USD\">1650.00</cbc:TaxInclusiveAmount>\r\n       
                <cbc:PayableAmount
                currencyID=\"USD\">1650.00</cbc:PayableAmount>\r\n   
                </cac:LegalMonetaryTotal>\r\n    <!-- Missing InvoiceLine
                -->\r\n</Invoice> "
      parameters:
        - name: X-User-Email
          in: header
          schema:
            type: string
          example: putYourOwnEmail@gmail.com
        - name: x-api-key
          in: header
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/xml
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/invoices:
    get:
      tags:
        - Invoice Routes
      summary: Get all invoices for a user
      parameters:
        - name: x-api-key
          in: header
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          schema:
            type: string
          example: newEmailTest@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/invoices/{id}:
    get:
      tags:
        - Invoice Routes
      summary: Fetch Specific Invoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: 0398032b-99b0-475c-af21-4abdf216e065
        - name: x-api-key
          in: header
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          schema:
            type: string
          example: putYourOwnEmail@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Invoice Routes
      summary: Delete Invoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: 93710852-d259-4662-8921-c77e925f5b15
        - name: x-api-key
          in: header
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          schema:
            type: string
          example: putYourOwnEmail@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/invoices/{id}/pdf:
    get:
      tags:
        - Invoice Routes
      summary: Create PDF from Invoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: 0398032b-99b0-475c-af21-4abdf216e065
        - name: x-api-key
          in: header
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          schema:
            type: string
          example: putYourOwnEmail@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/invoices/{id}/translate:
    post:
      tags:
        - Invoice Routes
      summary: Translate Invoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: 0398032b-99b0-475c-af21-4abdf216e065
        - name: x-api-key
          in: header
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          schema:
            type: string
          example: putYourOwnEmail@gmail.com
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                target_language: hindi
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/invoices/{id}/email:
    post:
      tags:
        - Invoice Routes
      summary: Send Single Invoice via Email
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: bb844176-2181-499b-b28e-575afa5d24a0
        - name: x-api-key
          in: header
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          schema:
            type: string
          example: putYourOwnEmail@gmail.com
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                recipient_email: recipient@example.com
                custom_message: This is your invoice - please review and pay at your earliest convenience.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/invoices/email/batch:
    post:
      tags:
        - Invoice Routes
      summary: Send Multiple Invoices via Email
      parameters:
        - name: x-api-key
          in: header
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          schema:
            type: string
          example: putYourOwnEmail@gmail.com
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                invoice_ids:
                  - 67bfa520-b670-4523-8432-939dcec8875d
                  - bb844176-2181-499b-b28e-575afa5d24a0
                recipient_email: recipient@example.com
                custom_message: Here are your invoices for this month.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/invoices/fetch/invoices:
    get:
      tags:
        - Invoice Routes v2
      summary: >-
        V2: Fetch invoices from user with filtering
      parameters:
        - name: x-api-key
          in: header
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          schema:
            type: string
          example: putYourOwnEmail@gmail.com
        - name: buyerName
          in: query
          schema:
            type: string
          example: ACME
        - name: sellerName
          in: query
          schema:
            type: string
          example: Supplier
        - name: issueDate
          in: query
          schema:
            type: string
          example: '2025-03-29'
        - name: dueDate
          in: query
          schema:
            type: string
          example: '2025-04-28'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/invoices/{id}/pdf/v2:
    get:
      tags:
        - Invoice Routes v2
      summary: 'V2: Create PDF from Translated Invoice'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: cefc375b-02df-46b9-80b9-cc6c248b2182
        - name: x-api-key
          in: header
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          schema:
            type: string
          example: putYourOwnEmail@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/invoices/user/invoices:
    delete:
      tags:
        - Invoice Routes v2
      summary: 'V2: Batch delete all invoices from user'
      parameters:
        - name: x-api-key
          in: header
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          schema:
            type: string
          example: putYourOwnEmail@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/invoices/upload:
    post:
      tags:
        - Invoice Routes v3
      summary: V3 - Upload and validate existing UBL invoice XML
      description: Validates an invoice XML document, parses it for relevant data, and stores it in the database. For usefulness!
      requestBody:
        content:
          application/xml:
            schema:
              type: string
              example: >-
                "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
                <Invoice xmlns=\"urn:oasis:names:specification:ubl:schema:xsd:Invoice-2\"
                         xmlns:cac=\"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\"
                         xmlns:cbc=\"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\">
                  <cbc:UBLVersionID>2.1</cbc:UBLVersionID>
                  <cbc:ID>INV-12345</cbc:ID>
                  <cbc:IssueDate>2023-12-01</cbc:IssueDate>
                  <cbc:DueDate>2023-12-31</cbc:DueDate>
                  <cbc:InvoiceTypeCode>380</cbc:InvoiceTypeCode>
                  <cbc:DocumentCurrencyCode>USD</cbc:DocumentCurrencyCode>
                  <cac:AccountingSupplierParty>
                    <cac:Party>
                      <cac:PartyName>
                        <cbc:Name>Supplier Inc.</cbc:Name>
                      </cac:PartyName>
                      <cac:PartyTaxScheme>
                        <cbc:CompanyID>US987654321</cbc:CompanyID>
                        <cac:TaxScheme>
                          <cbc:ID>VAT</cbc:ID>
                        </cac:TaxScheme>
                      </cac:PartyTaxScheme>
                    </cac:Party>
                  </cac:AccountingSupplierParty>
                  <cac:AccountingCustomerParty>
                    <cac:Party>
                      <cac:PartyName>
                        <cbc:Name>Acme Corporation</cbc:Name>
                      </cac:PartyName>
                      <cac:PartyTaxScheme>
                        <cbc:CompanyID>US123456789</cbc:CompanyID>
                        <cac:TaxScheme>
                          <cbc:ID>VAT</cbc:ID>
                        </cac:TaxScheme>
                      </cac:PartyTaxScheme>
                    </cac:Party>
                  </cac:AccountingCustomerParty>
                  <cac:LegalMonetaryTotal>
                    <cbc:LineExtensionAmount currencyID=\"USD\">1500.00</cbc:LineExtensionAmount>
                    <cbc:TaxExclusiveAmount currencyID=\"USD\">1500.00</cbc:TaxExclusiveAmount>
                    <cbc:TaxInclusiveAmount currencyID=\"USD\">1650.00</cbc:TaxInclusiveAmount>
                    <cbc:PayableAmount currencyID=\"USD\">1650.00</cbc:PayableAmount>
                  </cac:LegalMonetaryTotal>
                  <cac:InvoiceLine>
                    <cbc:ID>1</cbc:ID>
                    <cbc:InvoicedQuantity unitCode=\"EA\">10</cbc:InvoicedQuantity>
                    <cbc:LineExtensionAmount currencyID=\"USD\">1000.00</cbc:LineExtensionAmount>
                    <cac:Item>
                      <cbc:Description>Laptop Computer Model</cbc:Description>
                      <cbc:Name>Laptop Model X</cbc:Name>
                      <cac:ClassifiedTaxCategory>
                        <cbc:ID>S</cbc:ID>
                        <cbc:Percent>10</cbc:Percent>
                        <cac:TaxScheme>
                          <cbc:ID>VAT</cbc:ID>
                        </cac:TaxScheme>
                      </cac:ClassifiedTaxCategory>
                    </cac:Item>
                    <cac:Price>
                      <cbc:PriceAmount currencyID=\"USD\">100.00</cbc:PriceAmount>
                    </cac:Price>
                  </cac:InvoiceLine>
                </Invoice>"
        required: true
      parameters:
        - name: x-api-key
          in: header
          required: true
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          required: true
          schema:
            type: string
          example: your-email@example.com
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
          example: application/xml
      responses:
        '201':
          description: Invoice successfully uploaded and stored
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invoice uploaded successfully
                  invoiceId:
                    type: string
                    example: cefc375b-02df-46b9-80b9-cc6c248b2182
                  validation:
                    type: object
                    properties:
                      valid:
                        type: boolean
                        example: true
                      errors:
                        type: array
                        items:
                          type: string
                        example: []
                      warnings:
                        type: array
                        items:
                          type: string
                        example: ["Missing PaymentTerms (recommended)"]
        '400':
          description: Invalid invoice XML format
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid invoice XML format
                  validation:
                    type: object
                    properties:
                      valid:
                        type: boolean
                        example: false
                      errors:
                        type: array
                        items:
                          type: string
                        example: ["Missing required field: InvoiceTypeCode", "Invalid date format"]
                      warnings:
                        type: array
                        items:
                          type: string
                        example: []
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Authentication required
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Server error
  /api/invoices/validate-order:
    post:
      tags:
        - Invoice Routes v3
      summary: V3 - Validate Order XML
      description: Validates an order XML document according to UBL standards, returning detailed validation results
      requestBody:
        content:
          application/xml:
            schema:
              type: string
              example: >-
                "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
                <Order xmlns=\"urn:oasis:names:specification:ubl:schema:xsd:Order-2\"
                       xmlns:cac=\"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\"
                       xmlns:cbc=\"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\">
                    <cbc:UBLVersionID>2.1</cbc:UBLVersionID>
                    <cbc:ID>ORD-12345</cbc:ID>
                    <cbc:IssueDate>2025-04-12</cbc:IssueDate>
                    <cbc:OrderTypeCode>220</cbc:OrderTypeCode>
                    <cbc:DocumentCurrencyCode>USD</cbc:DocumentCurrencyCode>
                    
                    <cac:BuyerCustomerParty>
                        <cac:Party>
                            <cac:PartyName>
                                <cbc:Name>Acme Corporation</cbc:Name>
                            </cac:PartyName>
                            <cac:PartyTaxScheme>
                                <cbc:CompanyID>US12345678</cbc:CompanyID>
                                <cac:TaxScheme>
                                    <cbc:ID>VAT</cbc:ID>
                                </cac:TaxScheme>
                            </cac:PartyTaxScheme>
                        </cac:Party>
                    </cac:BuyerCustomerParty>
                    
                    <cac:SellerSupplierParty>
                        <cac:Party>
                            <cac:PartyName>
                                <cbc:Name>Supplier XYZ</cbc:Name>
                            </cac:PartyName>
                            <cac:PartyTaxScheme>
                                <cbc:CompanyID>GB123456789</cbc:CompanyID>
                                <cac:TaxScheme>
                                    <cbc:ID>VAT</cbc:ID>
                                </cac:TaxScheme>
                            </cac:PartyTaxScheme>
                        </cac:Party>
                    </cac:SellerSupplierParty>
                    
                    <cac:OrderLine>
                        <cac:LineItem>
                            <cbc:ID>1</cbc:ID>
                            <cbc:Quantity unitCode=\"EA\">10</cbc:Quantity>
                            <cac:Item>
                                <cbc:Description>Laptop Computer</cbc:Description>
                                <cbc:Name>High Performance Laptop</cbc:Name>
                            </cac:Item>
                            <cac:Price>
                                <cbc:PriceAmount currencyID=\"USD\">1200.00</cbc:PriceAmount>
                            </cac:Price>
                            <cac:TaxTotal>
                                <cac:TaxSubtotal>
                                    <cac:TaxCategory>
                                        <cbc:Percent>10.0</cbc:Percent>
                                    </cac:TaxCategory>
                                </cac:TaxSubtotal>
                            </cac:TaxTotal>
                        </cac:LineItem>
                    </cac:OrderLine>
                </Order>"
        required: true
      parameters:
        - name: x-api-key
          in: header
          required: true
          schema:
            type: string
          example: b7d48701c71ee62b9e3d5272e23bc92bde598cdbd353bb1fb46ac6093fc1e94a
        - name: X-User-Email
          in: header
          required: true
          schema:
            type: string
          example: your-email@example.com
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
          example: application/xml
      responses:
        '200':
          description: Order validation results
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    example: true
                  errors:
                    type: array
                    items:
                      type: string
                    example: []
                  warnings:
                    type: array
                    items:
                      type: string
                    example: ["Missing recommended field: Note"]
        '400':
          description: Invalid order XML format
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["Missing required element: OrderTypeCode", "Invalid date format"]
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid API key or user email
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
